const { getAllTools } = require('./dist/lib/toolsRegistry.js');

try {
  const tools = getAllTools();
  console.log('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤:', tools.length);
  
  tools.forEach((tool, index) => {
    if (!tool) {
      console.log(`–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç ${index} —î null/undefined`);
    } else if (!tool.name) {
      console.log(`–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç ${index} –Ω–µ –º–∞—î –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ name:`, JSON.stringify(tool, null, 2));
    } else {
      console.log(`${index}: ${tool.name}`);
    }
  });
  
  console.log('\n‚úÖ –£—Å—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ!');
  console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
  console.log(`   - –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å: ${tools.length}`);
  console.log(`   - –£—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ: ${tools.filter(t => t && t.name).length}`);
  console.log(`   - –ü—Ä–æ–±–ª–µ–º–Ω—ñ: ${tools.filter(t => !t || !t.name).length}`);
  
  // –Ø–≤–Ω–æ –∑–∞–≤–µ—Ä—à—É—î–º–æ –ø—Ä–æ—Ü–µ—Å
  process.exit(0);
} catch (error) {
  console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤:', error.message);
  process.exit(1);
}
